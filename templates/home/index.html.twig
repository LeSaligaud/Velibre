{% extends 'base.html.twig' %}


{% block body %}

    {% for message in app.flashes('success') %}
        <div class="col-md-6 bg-success p-4 rounded mx-auto text-center text-white mb-3">
            {{ message }}
        </div>
    {% endfor %}

    <div style="height: 85vh;width: 100vw;z-index: 99" id="map"></div>

    <script type="text/javascript">
        let map = L.map('map').setView([48.85780, 2.34111], 12);

        let geojsonFeature = {
            "type": "FeatureCollection",
            "features": [
                {% for station in stations %}
                {
                    "type": "Feature",
                    "properties": {
                        "name": "{{ station.name }}",
                        "amenity": "Station de vélo",
                        {% if station.velos.count is same as(0) %}
                        "popupContent": "Il n'y as plus de vélos disponible dans la station {{ station.name }}",
                        {% else %}
                        "popupContent": '{{ station.name }} <br> <br> {{ station.velos.count }} vélos disponible <br><br> <div style="display:flex;justify-content:center;"> <a style="color: white" href="{{ path('reservation') }}" class="btn btn-success">Louer un vélo</a> </div>',
                        {% endif %}
                        "marker-color": "#0433ff",
                        "marker-size": "medium",
                        "marker-symbol": "bicycle"
                    },
                    "geometry": {
                        "type": "Point",
                        "coordinates": [{{ station.emplacementLon }}, {{ station.emplacementLat }}]
                    }
                },
                {% endfor %}
            ]
        }
        function onEachFeature(feature, layer) {
            // does this feature have a property named popupContent?
            if (feature.properties && feature.properties.popupContent) {
                layer.bindPopup(feature.properties.popupContent);
            }

            return feature.properties.show_on_map;
        }

        //L.geoJSON(geojsonFeature).addTo(map);
        L.geoJSON(geojsonFeature, {onEachFeature: onEachFeature}).addTo(map);

        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox/streets-v11',
            tileSize: 512,
            zoomOffset: -1,
            accessToken: 'sk.eyJ1IjoiamFyY2hhbWJhdWx0IiwiYSI6ImNrenBtM3l6ZTAyMmEyeWxqbmFydTg5ZnMifQ.I0cWGny1kddLYzR86KdRHg'
        }).addTo(map);
    </script>

    <div style="width: 100vw;height: 15vh;position: absolute;bottom: 0;left:0;background-color: white;border: 1px solid lightgrey">
        <nav>
            <ul class="mt-3 d-flex justify-content-center">
                <a class="btn btn-danger" href="{{ path('app_logout') }}">Déconnexion</a>
            </ul>
        </nav>
    </div>
{% endblock %}


